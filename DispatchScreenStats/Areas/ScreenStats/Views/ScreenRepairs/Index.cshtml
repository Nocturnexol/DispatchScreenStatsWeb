@{
    ViewBag.Title = "Index";
    var F = Html.F();
    var isAuthorized = CommonHelper.User == "admin";
}

@using DispatchScreenStats.Common
@model IEnumerable<ScreenRepairs>


@section body {

    @(F.Panel()
          .ID("Panel1")
          .BodyPadding(5)
          .ShowBorder(false)
          .ShowHeader(false)
          .Layout(LayoutType.VBox)
          .IsViewPort(true)
          .Items(
              F.Grid()
                  .BoxFlex(1)
                  .ShowHeader(false)
                  .ShowBorder(true)
                  .ID("Grid1")
                  .DataIDField("_id")
                  .EnableCheckBoxSelect(false)
                  .AllowPaging(true).AllowCellEditing(true)
                  .PageSize(ViewBag.PageSize)
                  .IsDatabasePaging(true)
                  .OnPageIndexChanged(Url.Action("DoSearch"), "Form1,Grid1")
                  .Toolbars(
                      F.Toolbar()
                          .Items(
                                    F.Button().Listener("click", "onBtnClick").Icon(Icon.SystemSearch).Text("搜索"),
                              //isAuthorized ?F.Button()
                              //    .ID("btnDeleteSelected")
                              //    .Icon(Icon.Delete)
                              //    .Text("删除选中记录")
                              //    .Listener("click", "onDeleteSelectedClick") : F.Button().Hidden(true),
                                           isAuthorized ? F.Button()
                                          .ID("btnDeleteAll")
                                          .Icon(Icon.Delete)
                                          .Text("删除全部")
                                          .Listener("click", "onDeleteAllClick") : F.Button().Hidden(true),
                            isAuthorized ?  F.Button()
                                  .ID("btnImport")
                                  .Icon(Icon.PageExcel)
                                  .Text("导入")
                                          .Listener("click", "onImportClick") : F.Button().Hidden(true),
                                           isAuthorized ? F.Button()
                                          .ID("btnExport")
                                          .Icon(Icon.PageExcel)
                                          .Text("导出").Listener("click", "onExportClick") : F.Button().Hidden(true),
                                                      F.ToolbarFill(),
                                            isAuthorized ? F.Button()
                                                  .ID("btnNew")
                                                  .Text("新增")
                                                  .Icon(Icon.Add)
                                                  .Listener("click", "onNewClick") : F.Button().Hidden(true),
                                             isAuthorized ? F.Button()
                                                  .ID("btnReset")
                                                  .Text("重置表格数据")
                                                  .Listener("click", "onResetClick") : F.Button().Hidden(true),
                                             isAuthorized ? F.Button()
                                                  .ID("btnSubmit").Enabled(false)
                                                  .Text("保存数据").Icon(Icon.SystemSave)
                                                          .OnClick(Url.Action("btnSubmit_Click"), "Grid1") : F.Button().Hidden(true)
                          )
                  )
                  .Columns(
                      F.RowNumberField(),
                      F.RenderField()
                          .HeaderText("报修日期").Editor(F.DatePicker())
                          .DataField("RepairsDate").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd"),
                              F.RenderField()
                                  .HeaderText("设备编号")
                                  .DataField("DeviceNum").Hidden(true),
                          F.RenderField()
                          .HeaderText("线路")
                                  .DataField("LineName").Editor(
                            F.TriggerBox()
                                .TriggerIcon(TriggerIcon.Search)
                                .Listener("triggerclick", "onNameSearchTriggerClick")
                        ),
                      F.RenderField()
                          .HeaderText("站点")
                          .DataField("Station"),
                      F.RenderField()
                          .HeaderText("营运公司")
                          .DataField("Owner"),
                      F.RenderField()
                          .HeaderText("报修来源")
                          .DataField("RepairsSource").Editor(F.TextBox()),
                      F.RenderField()
                          .HeaderText("故障接报人")
                                  .DataField("Accepter").Editor(F.TextBox()),
                      F.RenderField()
                          .HeaderText("故障处理人")
                                  .DataField("Handler").Editor(F.TextBox()),
                      F.RenderField()
                          .HeaderText("故障类型")
                                  .DataField("HitchType").Editor(F.TextBox()),
                      F.RenderField()
                          .HeaderText("故障状态")
                                  .DataField("Status").Editor(F.TextBox()),
                      F.RenderField()
                          .HeaderText("故障问题")
                                  .DataField("HitchContent").Editor(F.TextBox()),
                      F.RenderField()
                          .HeaderText("解决方法")
                                  .DataField("Solution").ExpandUnusedSpace(true).Editor(F.TextBox()),
                                    F.RenderField()
                                  .HeaderText("")
                                  .Width(30)
                                  .RendererFunction("renderEditField")
                                  .TextAlign(TextAlign.Center)
                                  .EnableHeaderMenu(false)
                                  .EnableColumnHide(false)
                      //F.RenderField()
                      //    .HeaderText("")
                      //    .Width(60)
                      //    .RendererFunction("renderDeleteField")
                      //    .TextAlign(TextAlign.Center)
                      //    .EnableHeaderMenu(false)
                      //    .EnableColumnHide(false)
                          ).PageItems(
                              F.ToolbarSeparator(),
                              F.ToolbarText()
                                  .Text("每页记录数："),
                              F.DropDownList()
                                  .ID("ddlPageSize")
                                  .Width(80)
                                  .Listener("change", "onDdlPageSizeChange")
                                          .Items(CommonHelper.GetPageItems(ViewBag.PageSize))
                          )
                  .RecordCount(ViewBag.RecordCount)
                          .DataSource(Model).Listener("datachange", "onGridDataChange")

          ))


    @(F.Window()
          .ID("Window1")
          .Width(650)
          .Height(350)
          .IsModal(true)
          .Hidden(true)
          .Target(Target.Top)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableIFrame(true)
          .IFrameUrl(Url.Content("about:blank"))
          .OnClose(Url.Action("DoSearch"), "Form1,Grid1")
          )
@(F.Window()
          .ID("Window2")
          .Width(700)
          .Height(480)
          .IsModal(true)
          .Hidden(true)
          .Target(Target.Top)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableIFrame(true)
          .IFrameUrl(Url.Content("about:blank"))
          .OnClose(Url.Action("DoSearch"), "Form1,Grid1")
)
}

@section script {

    <script>
        function onGridDataChange() {
            var grid1 = F.ui.Grid1;
            var btnSubmit = F.ui.btnSubmit;
            // 如果没有删除行，没有新增行，没有修改的数据
            if (!grid1.getModifiedData().length) {
                btnSubmit.disable();
            } else {
                btnSubmit.enable();
            }
        }
        // 供子页面调用
        function updateGridRow(rowId, values) {
            var grid1 = F.ui.Grid1;

            // cancelEdit用来取消编辑
            grid1.cancelEdit();

            grid1.updateCellValue(rowId, values);
        }


        function onNameSearchTriggerClick(event) {
            var grid1 = F.ui.Grid1;
            var selectedCell = grid1.getSelectedCell();
            if (selectedCell) {
                var iframeWindowUrl = '@Url.Action("Index","ScreenRecIFrame","选择")';
                F.ui.Window1.show(iframeWindowUrl + '?rowid=' + selectedCell[0], "选择");
            }
        }

        function onNewClick(event) {
            var grid = F.ui.Grid1;
            // 新增一行（返回新增行的ID）
            var addedRowId = grid.addNewRecord({},
                true,
                'LineName');
            // 选中新增的那一行
            grid.selectRow(addedRowId);
        }

        function onResetClick(event) {
            F.confirm({
                message: '确定要重置表格数据？',
                ok: function () {
                    F.ui.Grid1.rejectChanges();
                }
            });
        }


        function onBtnClick() {
            F.ui.Window1.show('@Url.Action("Search")', '搜索');
        }

        function onDdlPageSizeChange(event) {
            var grid1 = F.ui.Grid1;

            // 触发后台事件
            F.doPostBack('@Url.Action("DoSearch")',
            {
                Grid1_fields: grid1.fields,
                Grid1_pageIndex: grid1.pageIndex,
                Grid1_pageSize: F.ui.ddlPageSize.getValue()
            });
        }
        function onDeleteAllClick(event) {
            F.confirm({
                message: '确定删除全部？',
                target: '_top',
                ok: function () {
                    F.doPostBack('@Url.Action("DeleteAll")', 'Form1,Grid1');
                }
            });
        }
    function renderDeleteField(value, params) {
        return '<a href="javascript:;" class="deletefield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/delete.png")"></a>';
    }
        function renderEditField(value, params) {
            return '<a href="javascript:;" class="editfield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/pencil.png")"></a>';
        }
        function onImportClick(event) {
            F.ui.Window1.show('@Url.Content("~/ScreenStats/ScreenRepairs/RepairsImport")', '导入');
        }
        function onExportClick() {
            window.location.href = '@Url.Action("Export")';
        }

        function deleteSelectedRows(selectedRows) {
            // 触发后台事件
            F.doPostBack('@Url.Action("Delete")',
            'Form1,Grid1',
            {
                'selectedRows': selectedRows
            });
    }

    function onDeleteSelectedClick(event) {
        var grid1 = F.ui.Grid1;

        if (!grid1.hasSelection()) {
            F.alert('请至少选择一项！');
            return;
        }

        var selectedRows = grid1.getSelectedRows();
        console.log(selectedRows);
        F.confirm({
            message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
            target: '_top',
            ok: function () {
                deleteSelectedRows(selectedRows);
            }
        });
    }
    function doSearch(values) {
        F.doPostBack('@Url.Action("DoSearch")', 'Grid1', values);
    }
    F.ready(function () {

        var grid1 = F.ui.Grid1;

        grid1.el.on('click',
            'a.deletefield',
            function (event) {
                var rowEl = $(this).closest('.f-grid-row');
                var rowData = grid1.getRowData(rowEl);
                console.log(rowData);
                F.confirm({
                    message: '你确定要删除选中的行数据吗？',
                    target: '_top',
                    ok: function () {
                        deleteSelectedRows([rowData.id]);
                    }
                });
            });


        grid1.el.on('click',
               'a.editfield',
               function (event) {
                   var rowEl = $(this).closest('.f-grid-row');
                   var rowData = grid1.getRowData(rowEl);

                   F.ui.Window2.show('@Url.Action("AddOrEdit")?id=' + rowData.id, '编辑');
               });

    });


    </script>
}
