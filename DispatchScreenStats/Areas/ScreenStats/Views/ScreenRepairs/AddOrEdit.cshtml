@{
    var F = Html.F();
}

@model ScreenRepairs

@section body {

    @(F.Panel()
          .ID("Panel1")
          .ShowBorder(false)
          .ShowHeader(false)
          .BodyPadding(10)
          .AutoScroll(true)
          .IsViewPort(true)
          .Toolbars(
              F.Toolbar()
                  .Items(
                      F.Button()
                          .Icon(Icon.SystemClose)
                          .Text("关闭")
                          .Listener("click", "F.activeWindow.hide();"),
                      F.ToolbarSeparator(),
                      Model == null ?
                          F.Button()
                              .ValidateForms("SimpleForm1")
                              .Icon(Icon.SystemSaveClose)
                              .OnClick(Url.Action("AddOrEdit"), "SimpleForm1", new Parameter("isAdd", "true"))
                              .Text("保存后关闭") : F.Button()
                                  .ValidateForms("SimpleForm1")
                                  .Icon(Icon.SystemSaveClose)
                                  .OnClick(Url.Action("AddOrEdit"), "SimpleForm1")
                                  .Text("保存后关闭")
                  )
          )
          .Items(
              F.SimpleForm()
                  .ID("SimpleForm1")
                  .ShowBorder(false)
                  .ShowHeader(false)
                  .Items(
                      Model == null ? new HiddenFieldExtension(new HiddenField()) : F.HiddenFieldFor(m => m._id),
                      //F.DropDownListFor(t => t.ServiceName).Items(ViewBag.ServiceList),
                      F.DatePickerFor(m => m.RepairsDate),
                      F.TriggerBoxFor(m => m.LineName).TriggerIcon(TriggerIcon.Search).EnableEdit(false).OnClientTriggerClick("onTriggerClick"),
                      F.TextBoxFor(m => m.Station).Enabled(false),
                      F.TextBoxFor(t => t.Owner).Enabled(false),
                      F.TextBoxFor(t => t.RepairsSource),
                      F.TextBoxFor(t => t.Accepter),
                      F.TextBoxFor(t => t.Handler),
                      F.DropDownListFor(t => t.HitchType).EnableEdit(true).ForceSelection(false).Items(ViewBag.hTypes),
                      F.DropDownListFor(t => t.Status).EnableEdit(true).ForceSelection(false).Items(ViewBag.hStatuses),
                      F.TextAreaFor(t => t.HitchContent).Height(50),
                      F.TextAreaFor(m => m.Solution).Height(50)
                  )
          ))


    @(F.Window()
          .ID("Window1")
          .Width(700)
          .Height(450)
          .IsModal(true)
          .Hidden(true)
          .Target(Target.Top)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableIFrame(true)
          .IFrameUrl(Url.Content("about:blank"))
          )
}
@section script{
    <script>
        function onTriggerClick() {
            var iframeWindowUrl = '@Url.Action("Index","ScreenRecIFrame","选择")';
            F.ui.Window1.show(iframeWindowUrl, "选择");
        }
        function updateGridRow(rowId, values) {
            F.ui.LineName.setValue(values['LineName']);
            F.ui.Station.setValue(values['Station']);
            F.ui.Owner.setValue(values['Owner']);
        }
    </script>
}