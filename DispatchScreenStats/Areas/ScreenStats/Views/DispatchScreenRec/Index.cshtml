@{
    ViewBag.Title = "Index";
    var F = Html.F();
    //var isAuthorized = CommonHelper.User == "admin";
    var isAuthorized = ViewBag.isAuth is bool && (bool)ViewBag.isAuth;
}

@using DispatchScreenStats.Common
@using DispatchScreenStats.Enums
@model IEnumerable<ScreenRecDetail>


@section body {

    @(F.Panel()
          .ID("Panel1")
          .BodyPadding(5)
          .ShowBorder(false)
          .ShowHeader(false)
          .Layout(LayoutType.Region)
          .IsViewPort(true)
          .Items(
              //F.Form()
              //    .ID("Form1")
              //    .ShowHeader(false)
              //    .ShowBorder(false)
              //    .Rows(
              //        F.FormRow()
              //            .Items(
              //                F.DropDownList().EnableEdit(true)
              //                    .ID("ddlLine").Items(ViewBag.Lines)
              //                    .EmptyText("安装线路"),
              //                F.DropDownList().EnableEdit(true)
              //                    .ID("ddlStation").Items(ViewBag.Stations)
              //                    .EmptyText("安装站点"),
              //                F.Button()
              //                    .ID("btnSearch")
              //                    .Text("检索")
              //                    .OnClick(Url.Action("DoSearch"), "Form1,Grid1"),
              //                F.Button()
              //                    .ID("btnReset")
              //                    .Text("重置")
              //                    .OnClientClick("F.ui.Form1.reset();")
              //            )
              //    ),
              F.Grid()
                  //.BoxFlex(2)
                          .RegionPosition(Position.Center)
                  .ShowHeader(false)
                  .ShowBorder(true)
                  .ID("Grid1")
                  .DataIDField("_id")
                  .DataTextField("DeviceNum")
                  .EnableCheckBoxSelect(true)
                          .AllowPaging(true).AllowSorting(true).OnSort(Url.Action("DoSearch"), "Grid1")
                  .AllowCellEditing(true).ClicksToEdit(2)
                  .PageSize(ViewBag.PageSize)
                  .IsDatabasePaging(true)
                  .OnPageIndexChanged(Url.Action("DoSearch"), "Form1,Grid1")
                  .Toolbars(
                      F.Toolbar()
                          .Items(
                              F.Button().Listener("click", "onBtnClick").Icon(Icon.SystemSearch).Text("搜索"),
                              isAuthorized ? F.Button()
                                  .ID("btnDeleteSelected")
                                  .Icon(Icon.Delete)
                                  .Text("删除选中记录")
                                  .Listener("click", "onDeleteSelectedClick") : F.Button().Hidden(true),
                                          isAuthorized ? F.Button()
                                          .ID("btnDeleteAll")
                                          .Icon(Icon.Delete)
                                          .Text("删除全部")
                                          .Listener("click", "onDeleteAllClick") : F.Button().Hidden(true),
                              isAuthorized ? F.Button()
                                  .ID("btnImport")
                                  .Icon(Icon.PageExcel)
                                  .Text("导入")
                                          .Listener("click", "onImportClick") : F.Button().Hidden(true),
                                      isAuthorized ? F.Button()
                                          .ID("btnExport")
                                          .Icon(Icon.PageExcel)
                                          .Text("导出").Listener("click", "onExportClick") : F.Button().Hidden(true),
                            
                              F.Button()
                                  .Icon(Icon.Map)
                                  .Text("查看地图")
                                  .Listener("click", "onMapAllClick"),
                                          //    isAuthorized ? F.Button()
                                          //.ID("btnUpload")
                                          //.Icon(Icon.DiskUpload)
                                          //.Text("上传照片")
                                          //        .Listener("click", "onUploadClick") : F.Button().Hidden(true),
                              F.ToolbarFill(),
                                       F.Button()
                                          .ID("btnNewRec")
                                          .Text("新增记录")
                                          .Icon(Icon.Add)
                                          .Listener("click", "onNewRecClick"),
                              F.Button()
                                  .ID("btnNew")
                                  .Text("新增日志")
                                  .Icon(Icon.Add)
                                  .Listener("click", "onNewClick"),
                              F.Button()
                                  .ID("btnReset")
                                  .Text("重置表格数据")
                                  .Listener("click", "onResetClick"),
                              F.Button()
                                  .ID("btnSubmit").Enabled(false)
                                  .Text("保存数据").Icon(Icon.SystemSave)
                                          .OnClick(Url.Action("btnSubmit_Click"), "Grid1,Grid2,Grid3,Grid4,Grid5")
                          //F.Button()
                          //    .ID("btnCreate")
                          //    .Icon(Icon.Add)
                          //    .Text("添加")
                          //    .Listener("click", "onCreateClick")
                          )
                  )
                  .Columns(
                      F.RowNumberField(),
                      F.RenderField()
                                          .HeaderText("设备编号").Width(80).SortField("DeviceNum")
                          .DataField("DeviceNum").Editor(F.TextBox().ID("tbxDeviceNum").Required(true)),
                      F.RenderField()
                                          .HeaderText("营运公司").Width(80).SortField("Owner")
                          .DataField("Owner")
                          .Editor(F.TextBox().ID("tbxOwner")),
                      F.RenderField()
                          .HeaderText("安装线路")
                                          .DataField("LineName").SortField("LineName")
                                  .Editor(F.TextBox().ID("tbxLineName").Required(true)),
                              F.RenderField()
                                  .HeaderText("同屏线路")
                                  .DataField("LinesInSameScreen").Width(120).Editor(F.TextBox()),
                                    F.RenderField()
                                  .HeaderText("施工类型")
                                  .DataField("ConstructionType").Editor(F.TextBox()),
                      F.RenderField()
                                          .HeaderText("屏幕类型").FieldType(FieldType.Int).SortField("ScreenType")
                          .DataField("ScreenType").Width(120).RendererFunction("renderScreenType"),
                          F.RenderCheckField().HeaderText("是否无线屏").DataField("IsWireLess"),
                      F.RenderField()
                                          .HeaderText("屏数").SortField("ScreenCount")
                          .DataField("ScreenCount").Width(60).FieldType(FieldType.Int)
                          .Editor(F.NumberBox().ID("nbxScreenCount").NoDecimal(true).NoNegative(true).MinValue(0)),
                      F.RenderField()
                                          .HeaderText("安装站点").SortField("InstallStation")
                          .DataField("InstallStation").Width(120)
                          .Editor(F.TextBox().ID("tbxInstallStation").Required(true)),
                      F.RenderField()
                                          .HeaderText("安装日期").SortField("InstallDate")
                          .DataField("InstallDate").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd")
                          .Editor(
                              F.DatePicker()
                                  .ID("dpInstallDate").MaxDate(DateTime.Today)
                                  .Required(true)
                                  ), 
                                  F.RenderField()
                                                  .HeaderText("金额").SortField("Price")
                                                  .DataField("Price").Editor(F.TextBox().ID("tbxPr")),
                                                          F.RenderField()
                                                          .HeaderText("付款状态").SortField("PaymentStatus")
                                                                          .DataField("PaymentStatus").Editor(F.DropDownList().Items(ViewBag.PaymentStatuses)),
                                                          F.RenderField()
                                                  .HeaderText("收费时间").SortField("ChargeTime")
                                          .DataField("ChargeTime").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd")
                                  .Editor(
                                      F.DatePicker()
                                                  .ID("dpChargeTime").MaxDate(DateTime.Today)
                                          .Required(true)
                                          ), 
                      F.RenderField()
                          .HeaderText("备注")
                          .DataField("Materials.Remark").ExpandUnusedSpace(true)
                          .Editor(F.TextBox().ID("tbxInstallStation")),
                              F.RenderField()
                                  .HeaderText("")
                                  .Width(60)
                                  .RendererFunction("renderUploadField")
                                  .TextAlign(TextAlign.Center)
                                  .EnableHeaderMenu(false)
                                  .EnableColumnHide(false),
                                            F.RenderField()
                                          .HeaderText("")
                                          .Width(60)
                                          .RendererFunction("renderImgField")
                                          .TextAlign(TextAlign.Center)
                                          .EnableHeaderMenu(false)
                                          .EnableColumnHide(false),
                      F.RenderField()
                          .HeaderText("")
                          .Width(60)
                          .RendererFunction("renderLocateField")
                          .TextAlign(TextAlign.Center)
                          .EnableHeaderMenu(false)
                          .EnableColumnHide(false),
                                   F.RenderField()
                                  .HeaderText("")
                                  .Width(60)
                                  .RendererFunction("renderDetailField")
                                  .TextAlign(TextAlign.Center)
                                  .EnableHeaderMenu(false)
                                  .EnableColumnHide(false),
                    isAuthorized?  F.RenderField()
                          .HeaderText("")
                          .Width(60)
                          .RendererFunction("renderDeleteField")
                          .TextAlign(TextAlign.Center)
                          .EnableHeaderMenu(false)
                                  .EnableColumnHide(false) : F.RenderField().Hidden(true)

                  ).PageItems(
                      F.ToolbarSeparator(),
                      F.ToolbarText()
                          .Text("每页记录数："),
                      F.DropDownList()
                          .ID("ddlPageSize")
                          .Width(80)
                          .Listener("change", "onDdlPageSizeChange")
                                  .Items(CommonHelper.GetPageItems(ViewBag.PageSize))
                  )
                  .Listener("rowclick", "onGrid1RowClick")
                  .Listener("datachange", "onGridDataChange")
                  .RecordCount(ViewBag.RecordCount)
                  .DataSource(Model),

                  F.TabStrip()
                .ID("TabStrip1")
                                  //.BoxFlex(1)
                                           .RegionPosition(Position.Bottom)
                        .RegionSplit(true)
                        //.EnableCollapse(true)
                        .RegionPercent("30%")
                .ShowBorder(true).MarginTop(10)
        .TabPosition(TabPosition.Top)
        .EnableTabCloseMenu(false)
        .ActiveTabIndex(0)
        .Tabs(
            F.Tab()
                .Title("日志类型")
                        .BodyPadding(5).Layout(LayoutType.Fit)
                .Items(
                            F.Grid()
                                  .ShowHeader(false)
                                  .ShowBorder(true)
                                  .ID("Grid4").Listener("datachange", "onGridDataChange")
                                  .DataIDField("_id")
                                  .DataTextField("DeviceNum").AllowCellEditing(true).ClicksToEdit(2)
            //.EnableCheckBoxSelect(true)
                                  .Columns(
                                      F.RowNumberField(),
                                      F.RenderField()
                                          .HeaderText("设备编号").Width(80)
                                          .DataField("DeviceNum"),
                                      F.RenderField()
                                          .HeaderText("日期")
                                          .DataField("Date").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd")
                                          .Editor(F.DatePicker().ID("dpDate")),
                                      F.RenderField()
                                          .HeaderText("备注").Editor(F.TextBox().ID("tbxRemark").Required(true))
                                          .DataField("Materials.Remark").Width(180).ExpandUnusedSpace(true),
                                      F.RenderField()
                                          .Width(50)
                                          .EnableHeaderMenu(false)
                                          .RendererFunction("renderActions")
                                  )
                ),
            F.Tab()
                .Title("服务类型")
                .BodyPadding(5)
                .Layout(LayoutType.Fit)
                .Items(

                      F.Grid()
                          .ShowHeader(false)
                          .ShowBorder(true)
                          .ID("Grid2").Listener("datachange", "onGridDataChange")
                          .DataIDField("_id")
                          .DataTextField("DeviceNum").AllowCellEditing(true).ClicksToEdit(2)
            //.EnableCheckBoxSelect(true)
                          .Columns(
                              F.RowNumberField(),
                              F.RenderField()
                                  .HeaderText("设备编号").Width(80)
                                  .DataField("DeviceNum"),
                              F.RenderField()
                                  .HeaderText("报修日期")
                                          .DataField("RepairsDate").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd")
                                  .Editor(F.DatePicker().ID("dpDate")),
                               F.RenderField()
                          .HeaderText("故障类型")
                                  .DataField("HitchType").Editor(F.TextBox()),
                      F.RenderField()
                          .HeaderText("故障状态")
                                  .DataField("Status").Editor(F.TextBox()),
                      F.RenderField()
                          .HeaderText("故障问题")
                                  .DataField("HitchContent").Editor(F.TextBox()),
                      F.RenderField()
                          .HeaderText("解决方法")
                                  .DataField("Solution").ExpandUnusedSpace(true),
                              F.RenderField()
                                  .Width(50)
                                  .EnableHeaderMenu(false)
                                  .RendererFunction("renderActions")
                          )
                ),
            F.Tab()
                .Title("收费类型")
                        .BodyPadding(5).Layout(LayoutType.Fit)
                .Items(
                            F.Grid()
                                  .ShowHeader(false)
                                  .ShowBorder(true)
                                  .ID("Grid3").Listener("datachange", "onGridDataChange")
                                  .DataIDField("_id")
                                  .DataTextField("DeviceNum").AllowCellEditing(true).ClicksToEdit(2)
            //.EnableCheckBoxSelect(true)
                                  .Columns(
                                      F.RowNumberField(),
                                      F.RenderField()
                                          .HeaderText("设备编号").Width(80)
                                          .DataField("DeviceNum"),
                                      F.RenderField()
                                          .HeaderText("处理类型")
                                          .DataField("HandlingType").Editor(F.DropDownList().Items(ViewBag.HandlingTypes)),
                                      F.RenderField()
                                          .HeaderText("收费类型")
                                                          .DataField("ChargeType").Editor(F.DropDownList().Items(ViewBag.ChargeTypes)),
                                      F.RenderField()
                                          .HeaderText("付款状态")
                                                          .DataField("PaymentStatus").Editor(F.DropDownList().Items(ViewBag.PaymentStatuses)),
                                                           F.RenderField()
                                          .HeaderText("金额")
                                                          .DataField("Price").Editor(F.TextBox().ID("tbxPrice")),
                                                                       F.RenderField()
                                                                  .HeaderText("发生时间")
                                                                  .DataField("OccurredTime").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd")
                                                                                  .Editor(F.DatePicker()),
                                              F.RenderField()
                                                  .HeaderText("收费时间")
                                                  .DataField("Date").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd")
                                                  .Editor(F.DatePicker()),
                                      F.RenderField()
                                          .HeaderText("备注").Editor(F.TextBox().ID("tbxRemark").Required(true))
                                          .DataField("Materials.Remark").Width(180).ExpandUnusedSpace(true),
                                      F.RenderField()
                                          .Width(50)
                                          .EnableHeaderMenu(false)
                                          .RendererFunction("renderActions")
                                  )
                ),
                        F.Tab()
                        .Title("巡检类型")
                        .BodyPadding(5)
                        .Layout(LayoutType.Fit)
                        .Items(
                              F.Grid()
                                  .ShowHeader(false)
                                  .ShowBorder(true)
                                  .ID("Grid5").Listener("datachange", "onGridDataChange")
                                  .DataIDField("_id")
                                  .DataTextField("DeviceNum").AllowCellEditing(true).ClicksToEdit(2)
            //.EnableCheckBoxSelect(true)
                                  .Columns(
                                      F.RowNumberField(),
                                      F.RenderField()
                                          .HeaderText("设备编号").Width(80)
                                          .DataField("DeviceNum"),
                                      F.RenderField()
                                          .HeaderText("巡检日期")
                                          .DataField("Date").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd")
                                          .Editor(F.DatePicker().ID("dpDate")),
                                      F.RenderField()
                                          .HeaderText("备注").Editor(F.TextBox().ID("tbxRemark"))
                                          .DataField("Materials.Remark").Width(180).ExpandUnusedSpace(true),
                                      F.RenderField()
                                          .Width(50)
                                          .EnableHeaderMenu(false)
                                          .RendererFunction("renderActions")
                                  )
                        )
        )
                  
          ))


    @(F.Window()
          .ID("Window1")
          .Width(600)
          .Height(150)
          .IsModal(true)
          .Hidden(true)
          .Target(Target.Top)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableIFrame(true)
          .IFrameUrl(Url.Content("about:blank"))
          .OnClose(Url.Action("DoSearch"), "Form1,Grid1")
          )
    @(F.Window()
          .ID("Window2")
          .Width(630)
          .Height(475)
          .IsModal(true)
          .Hidden(true)
          .Target(Target.Top)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableIFrame(true)
          .IFrameUrl(Url.Content("about:blank"))
          .OnClose(Url.Action("DoSearch"), "Form1,Grid1")
          )
@(F.Window()
        .ID("iframeWindow")
        .EnableIFrame(true)
        .EnableMaximize(true)
        .EnableResize(true)
        .Target(Target.Top)
        .Height(350)
        .Width(700)
        .Title("配件")
        .Hidden(true)
)
    @(F.HiddenField().ID("rowClicked"))
}

@section script {

    <script>
    function onBtnClick() {
        F.ui.Window2.show('@Url.Content("~/ScreenStats/DispatchScreenRec/Search")', '搜索');
    }

    function doSearch(values) {
        F.doPostBack('@Url.Action("DoSearch")', 'Grid1', values);
    }

    function renderScreenType(val) {
        switch (val) {
            case @((int) ScreenTypeEnum.标准单线屏):
                return "@ScreenTypeEnum.标准单线屏";
            case @((int) ScreenTypeEnum.七行双线屏):
                return "@ScreenTypeEnum.七行双线屏";
            case @((int) ScreenTypeEnum.定制双线屏):
                return "@ScreenTypeEnum.定制双线屏";
            case @((int) ScreenTypeEnum.表格定制屏):
                return "@ScreenTypeEnum.表格定制屏";
            default:
                return "";
        }
    }

    function doPostBackReBindGrid(event) {
        var grid1 = F.ui.Grid1;

        // 触发后台事件
        F.doPostBack('@Url.Action("DoSearch")',
        {
            Grid1_fields: grid1.fields,
            Grid1_pageIndex: grid1.pageIndex,
            Grid1_pageSize: F.ui.ddlPageSize.getValue()
        });

    }

    function onDdlPageSizeChange(event) {
        doPostBackReBindGrid();
    }

    function onMapAllClick() {
        window.open('@Url.Content("~/ScreenStats/DispatchScreenRec/LocateAll")');
    }

    function renderActions(value, params) {
        var deleteImageUrl = '@Url.Content("~/res/icon/delete.png")';
        return '<a class="action-btn delete" href="javascript:;"><img class="f-grid-cell-icon" src="' + deleteImageUrl + '"></a>';
    }
        
        function renderUploadField(value, params) {
            var deleteImageUrl = '@Url.Content("~/res/icon/disk_upload.png")';
            return '<a class="uploadfield" href="javascript:;"><img class="f-grid-cell-icon" src="' + deleteImageUrl + '"></a>';
        }
        function renderImgField(value, params) {
            var deleteImageUrl = '@Url.Content("~/res/icon/image_magnify.png")';
            return '<a class="imgfield" href="javascript:;"><img class="f-grid-cell-icon" src="' + deleteImageUrl + '"></a>';
        }

    function onNewRecClick() {
        F.ui.Window2.show('@Url.Content("~/ScreenStats/DispatchScreenRec/Add")', '新增记录');
    }

    function onNewClick(event) {
        var grid = null;
        //var data = grid2.alldata[0].values;
        var rowData = F.ui.rowClicked.getValue();
        if (rowData) {
            var activeTabIndex = F.ui.TabStrip1.getActiveTabIndex();
            if (activeTabIndex == 0) {
                grid = F.ui.Grid4;
            }else if (activeTabIndex == 1) {
                grid = F.ui.Grid2;
            }else if (activeTabIndex == 2) {
                grid = F.ui.Grid3;
            }else if (activeTabIndex == 3) {
                grid = F.ui.Grid5;
            }
            var data = $.parseJSON(rowData);
            // 新增一行（返回新增行的ID）
            var addedRowId = grid.addNewRecord({
                'DeviceNum': data["DeviceNum"],
                'ChargeType':'免费'
            },
                true,
                'Materials_Remark');
            // 选中新增的那一行
            grid.selectRow(addedRowId);
        } else {
            F.alert("请选择一行记录");
        }

    }

    function onResetClick(event) {
        F.confirm({
            message: '确定要重置表格数据？',
            ok: function() {
                F.ui.Grid1.rejectChanges();
                F.ui.Grid2.rejectChanges();
                F.ui.Grid3.rejectChanges();
                F.ui.Grid4.rejectChanges();
                F.ui.Grid5.rejectChanges();
            }
        });
    }

    function onGridDataChange() {
        var grid1 = F.ui.Grid1;
        var btnSubmit = F.ui.btnSubmit;
        var grid2 = F.ui.Grid2;
        var grid3 = F.ui.Grid3;
        var grid4 = F.ui.Grid4;
        var grid5 = F.ui.Grid5;
        // 如果没有删除行，没有新增行，没有修改的数据
        if (!grid1.getModifiedData().length && !grid2.getModifiedData().length&& !grid3.getModifiedData().length&& !grid4.getModifiedData().length
            && !grid5.getModifiedData().length) {
            btnSubmit.disable();
        } else {
            btnSubmit.enable();
        }
    }

    function onGrid1RowClick(event, rowId) {
        var grid1 = F.ui.Grid1;
        var rowData = grid1.getRowData(rowId);
        var column = grid1.getColumn(grid1.getSelectedCell()[1]);
        F.ui.rowClicked.setValue(JSON.stringify(rowData.values));
        // 触发后台事件
        F.doPostBack('@Url.Action("Grid1_RowClick")',
            'Grid2,Grid3,Grid4,Grid5',
            {
                rowId: rowData.id,
                rowText: rowData.text,
                rowIndex: rowData.index,
                columnText: column.text
            });

    }

    function renderDeleteField(value, params) {
        return '<a href="javascript:;" class="deletefield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/delete.png")"></a>';
    }

    function renderLocateField(value, params) {
        return '<a href="javascript:;" class="locatefield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/map.png")"></a>';
    }

    function renderDetailField() {
        return '<a href="javascript:;" class="detailfield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/application_view_detail.png")"></a>';
    }

    function onCreateClick(event) {
        F.ui.Window1.show('@Url.Content("~/ScreenStats/DispatchScreenRec/Create")', '新增记录');
    }

    function onImportClick(parameters) {
        F.ui.Window1.show('@Url.Content("~/ScreenStats/DispatchScreenRec/Import")', '导入');
    }
        function onUploadClick(parameters) {
            F.ui.Window1.show('@Url.Content("~/ScreenStats/DispatchScreenRec/Upload")', '上传照片');
        }
        function onInspectionImportClick(parameters) {
            F.ui.Window1.show('@Url.Content("~/ScreenStats/DispatchScreenRec/InspectionImport")', '巡检导入');
        }
        function onExportClick() {
            window.location.href = '@Url.Action("Export")';
        }
    function deleteSelectedRows(selectedRows) {
        // 触发后台事件
        F.doPostBack('@Url.Action("Delete")',
            'Form1,Grid1',
            {
                'selectedRows': selectedRows
            });
    }

        function onDeleteAllClick() {
            F.confirm({
                message: '你确定要删除所有数据吗？',
                target: '_top',
                ok: function() {
                    F.doPostBack('@Url.Action("DeleteAll")', 'Form1,Grid1');
                }
            });
    }

    function onDeleteSelectedClick(event) {
        var grid1 = F.ui.Grid1;

        if (!grid1.hasSelection()) {
            F.alert('请至少选择一项！');
            return;
        }

        var selectedRows = grid1.getSelectedRows();
        console.log(selectedRows);
        F.confirm({
            message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
            target: '_top',
            ok: function() {
                deleteSelectedRows(selectedRows);
            }
        });
    }

    F.ready(function() {

        var grid2 = F.ui.Grid2;
        grid2.el.on('click', 'a.action-btn.delete', function (event) {
            var cnode = $(this);
            var rowData = grid2.getRowData(cnode.closest('.f-grid-row'));

            F.confirm({
                message: '删除选中行？',
                target: '_top',
                ok: function () {
                    grid2.deleteRow(rowData);
                }
            });
        });

        var grid3 = F.ui.Grid3;
        grid3.el.on('click', 'a.action-btn.delete', function (event) {
            var cnode = $(this);
            var rowData = grid3.getRowData(cnode.closest('.f-grid-row'));

            F.confirm({
                message: '删除选中行？',
                target: '_top',
                ok: function () {
                    grid3.deleteRow(rowData);
                }
            });
        });

        var grid4 = F.ui.Grid4;
        grid4.el.on('click', 'a.action-btn.delete', function (event) {
            var cnode = $(this);
            var rowData = grid4.getRowData(cnode.closest('.f-grid-row'));

            F.confirm({
                message: '删除选中行？',
                target: '_top',
                ok: function () {
                    grid4.deleteRow(rowData);
                }
            });
        });

        var grid5 = F.ui.Grid5;
        grid5.el.on('click', 'a.action-btn.delete', function (event) {
            var cnode = $(this);
            var rowData = grid5.getRowData(cnode.closest('.f-grid-row'));

            F.confirm({
                message: '删除选中行？',
                target: '_top',
                ok: function () {
                    grid5.deleteRow(rowData);
                }
            });
        });

        var grid1 = F.ui.Grid1;

        grid1.el.on('click',
            'a.deletefield',
            function(event) {
                var rowEl = $(this).closest('.f-grid-row');
                var rowData = grid1.getRowData(rowEl);
                console.log(rowData);
                F.confirm({
                    message: '你确定要删除选中的行数据吗？',
                    target: '_top',
                    ok: function() {
                        deleteSelectedRows([rowData.id]);
                    }
                });
            });

        grid1.el.on('click',
            'a.locatefield',
            function(event) {
                var rowEl = $(this).closest('.f-grid-row');
                var rowData = grid1.getRowData(rowEl);

                window.open('@Url.Content("~/ScreenStats/DispatchScreenRec/Locate/")?line=' +
                        rowData.values.LineName+'&station='+rowData.values.InstallStation);
                });

            grid1.el.on('click',
                'a.detailfield',
                function(event) {
                    var rowEl = $(this).closest('.f-grid-row');
                    var rowData = grid1.getRowData(rowEl);
                    F.ui.iframeWindow.show( '@Url.Action("Index","Accessory")?devNum='+rowData.values.DeviceNum);
                });

        
        grid1.el.on('click',
            'a.uploadfield',
            function(event) {
                var rowEl = $(this).closest('.f-grid-row');
                var rowData = grid1.getRowData(rowEl);
                F.ui.Window1.show( '@Url.Action("Upload")?devNum='+rowData.values.DeviceNum,"上传");
            });

        grid1.el.on('click',
           'a.imgfield',
           function(event) {
               var rowEl = $(this).closest('.f-grid-row');
               var rowData = grid1.getRowData(rowEl);
               F.ui.Window2.show( '@Url.Action("ViewImage")?devNum='+rowData.values.DeviceNum,"查看图片");
           });

        });


    </script>
}
