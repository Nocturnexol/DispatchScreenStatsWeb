@{
    ViewBag.Title = "Index";
    var F = Html.F();
}

@using DispatchScreenStats.Enums
@model IEnumerable<ScreenRecDetail>


@section body {

    @(F.Panel()
          .ID("Panel1")
          .BodyPadding(5)
          .ShowBorder(false)
          .ShowHeader(false)
          .Layout(LayoutType.VBox)
          .IsViewPort(true)
          .Items(
              //F.Form()
              //    .ID("Form1")
              //    .ShowHeader(false)
              //    .ShowBorder(false)
              //    .Rows(
              //        F.FormRow()
              //            .Items(
              //                F.DropDownList().EnableEdit(true)
              //                    .ID("ddlLine").Items(ViewBag.Lines)
              //                    .EmptyText("安装线路"),
              //                F.DropDownList().EnableEdit(true)
              //                    .ID("ddlStation").Items(ViewBag.Stations)
              //                    .EmptyText("安装站点"),
              //                F.Button()
              //                    .ID("btnSearch")
              //                    .Text("检索")
              //                    .OnClick(Url.Action("DoSearch"), "Form1,Grid1"),
              //                F.Button()
              //                    .ID("btnReset")
              //                    .Text("重置")
              //                    .OnClientClick("F.ui.Form1.reset();")
              //            )
              //    ),
              F.Grid()
                  .BoxFlex(1)
                  .ShowHeader(false)
                  .ShowBorder(true)
                  .ID("Grid1")
                  .DataIDField("_id")
                  .DataTextField("DeviceNum")
                  .EnableCheckBoxSelect(true)
                  .AllowPaging(true)
                  .AllowCellEditing(true).ClicksToEdit(2)
                  .PageSize(ViewBag.PageSize)
                  .IsDatabasePaging(true)
                  .OnPageIndexChanged(Url.Action("DoSearch"), "Form1,Grid1")
                  .Toolbars(
                      F.Toolbar()
                          .Items(
                              F.Button().Listener("click", "onBtnClick").Icon(Icon.SystemSearch).Text("搜索"),
                              F.Button()
                                  .ID("btnDeleteSelected")
                                  .Icon(Icon.Delete)
                                  .Text("删除选中记录")
                                  .Listener("click", "onDeleteSelectedClick"),
                              F.Button()
                                  .ID("btnImport")
                                  .Icon(Icon.PageExcel)
                                  .Text("导入")
                                  .Listener("click", "onImportClick"),
                                            F.Button()
                                          .Icon(Icon.Map)
                                          .Text("查看地图")
                                          .Listener("click", "onMapAllClick"),
                              F.ToolbarFill(),
                              F.Button()
                                  .ID("btnNew")
                                  .Text("新增日志")
                                  .Icon(Icon.Add)
                                  .Listener("click", "onNewClick"),
                              F.Button()
                                  .ID("btnReset")
                                  .Text("重置表格数据")
                                  .Listener("click", "onResetClick"),
                              F.Button()
                                  .ID("btnSubmit").Enabled(false)
                                  .Text("保存数据").Icon(Icon.SystemSave)
                                  .OnClick(Url.Action("btnSubmit_Click"), "Grid1,Grid2")
                          //F.Button()
                          //    .ID("btnCreate")
                          //    .Icon(Icon.Add)
                          //    .Text("添加")
                          //    .Listener("click", "onCreateClick")
                          )
                  )
                  .Columns(
                      F.RowNumberField(),
                      F.RenderField()
                          .HeaderText("设备编号").Width(80)
                          .DataField("DeviceNum").Editor(F.TextBox().ID("tbxDeviceNum").Required(true)),
                      F.RenderField()
                          .HeaderText("营运公司").Width(80)
                          .DataField("Owner").FieldType(FieldType.Int)
                          .Editor(F.TextBox().ID("tbxOwner")),
                      F.RenderField()
                          .HeaderText("安装线路")
                          .DataField("LineName").Width(180)
                          .Editor(F.TextBox().ID("tbxLineName").Required(true)),
                      F.RenderField()
                          .HeaderText("屏幕类型").FieldType(FieldType.Int)
                          .DataField("ScreenType").Width(120).RendererFunction("renderScreenType"),
                      F.RenderField()
                          .HeaderText("同屏线路")
                          .DataField("LinesInSameScreen").Width(120),
                      F.RenderField()
                          .HeaderText("屏数")
                          .DataField("ScreenCount").Width(60).FieldType(FieldType.Int)
                          .Editor(F.NumberBox().ID("nbxScreenCount").NoDecimal(true).NoNegative(true).MinValue(0)),
                      F.RenderField()
                          .HeaderText("安装站点")
                          .DataField("InstallStation").Width(120)
                          .Editor(F.TextBox().ID("tbxInstallStation").Required(true)),
                      F.RenderField()
                          .HeaderText("安装日期")
                          .DataField("InstallDate").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd")
                          .Editor(
                              F.DatePicker()
                                  .ID("dpInstallDate").MaxDate(DateTime.Today)
                                  .Required(true)
                          ),
                      F.RenderField()
                          .HeaderText("保存时间").Width(150)
                          .DataField("SaveTime").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd HH:mm:ss"),
                      F.RenderField()
                          .HeaderText("备注")
                          .DataField("Materials.Remark").ExpandUnusedSpace(true)
                          .Editor(F.TextBox().ID("tbxInstallStation")),
                      //F.RenderField()
                      //    .HeaderText("")
                      //    .Width(60)
                      //    .RendererFunction("renderEditField")
                      //    .TextAlign(TextAlign.Center)
                      //    .EnableHeaderMenu(false)
                      //    .EnableColumnHide(false),
                      F.RenderField()
                          .HeaderText("")
                          .Width(60)
                          .RendererFunction("renderLocateField")
                          .TextAlign(TextAlign.Center)
                          .EnableHeaderMenu(false)
                          .EnableColumnHide(false),
                      F.RenderField()
                          .HeaderText("")
                          .Width(60)
                          .RendererFunction("renderDeleteField")
                          .TextAlign(TextAlign.Center)
                          .EnableHeaderMenu(false)
                          .EnableColumnHide(false)

                  ).PageItems(
                      F.ToolbarSeparator(),
                      F.ToolbarText()
                          .Text("每页记录数："),
                      F.DropDownList()
                          .ID("ddlPageSize")
                          .Width(80)
                          .Listener("change", "onDdlPageSizeChange")
                          .Items(
                              F.ListItem()
                                  .Text("20")
                                  .Value("20"),
                              F.ListItem()
                                  .Text("50")
                                  .Value("50"),
                              F.ListItem()
                                  .Text("100")
                                  .Value("100"),
                              F.ListItem()
                                  .Text("200")
                                  .Value("200")
                          )
                  )
                  .Listener("rowclick", "onGrid1RowClick")
                  .Listener("datachange", "onGridDataChange")
                  .RecordCount(ViewBag.RecordCount)
                  .DataSource(Model),

              F.Grid()
                  .BoxFlex(1)
                  .ShowHeader(false)
                  .ShowBorder(true).MarginTop(15)
                  .ID("Grid2").Listener("datachange", "onGridDataChange")
                  .DataIDField("_id")
                  .DataTextField("DeviceNum").AllowCellEditing(true).ClicksToEdit(2)
                  //.EnableCheckBoxSelect(true)
                  .Columns(
                      F.RowNumberField(),
                      F.RenderField()
                          .HeaderText("设备编号").Width(80)
                          .DataField("DeviceNum"),
                      F.RenderField()
                          .HeaderText("营运公司").Width(80)
                          .DataField("Owner").FieldType(FieldType.Int),
                      F.RenderField()
                          .HeaderText("安装线路")
                          .DataField("LineName").Width(180),
                      F.RenderField()
                          .HeaderText("屏数")
                          .DataField("ScreenCount").Width(60).FieldType(FieldType.Int),
                      F.RenderField()
                          .HeaderText("安装站点")
                          .DataField("InstallStation").Width(120),
                      F.RenderField()
                          .HeaderText("安装日期").Editor(
                              F.DatePicker()
                                  .ID("dpInstallDate2").MaxDate(DateTime.Today)
                                  .Required(true)
                          )
                          .DataField("InstallDate").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd"),
                      F.RenderField()
                          .HeaderText("保存时间").Width(150)
                          .DataField("SaveTime").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd HH:mm:ss"),
                      F.RenderField()
                          .HeaderText("备注").Editor(F.TextBox().ID("tbxRemark").Required(true))
                          .DataField("Materials.Remark").ExpandUnusedSpace(true),
                                   F.RenderField()
                        .Width(50)
                        .EnableHeaderMenu(false)
                        .RendererFunction("renderActions")
                  )
          ))


    @(F.Window()
          .ID("Window1")
          .Width(600)
          .Height(150)
          .IsModal(true)
          .Hidden(true)
          .Target(Target.Top)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableIFrame(true)
          .IFrameUrl(Url.Content("about:blank"))
          .OnClose(Url.Action("DoSearch"), "Form1,Grid1")
          )
    @(F.Window()
          .ID("Window2")
          .Width(600)
          .Height(380)
          .IsModal(true)
          .Hidden(true)
          .Target(Target.Top)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableIFrame(true)
          .IFrameUrl(Url.Content("about:blank"))
          .OnClose(Url.Action("DoSearch"), "Form1,Grid1")
          )
    @(F.HiddenField().ID("rowClicked"))
}

@section script {

    <script>
        function onBtnClick() {
            F.ui.Window2.show('@Url.Content("~/ScreenStats/DispatchScreenRec/Search")', '搜索');
        }

        function doSearch(values) {
            F.doPostBack('@Url.Action("DoSearch")', 'Grid1', values);
        }

        function renderScreenType(val) {
            switch (val) {
            case @((int) ScreenTypeEnum.标准单线屏):
                return "@ScreenTypeEnum.标准单线屏";
            case @((int) ScreenTypeEnum.七行双线屏):
                return "@ScreenTypeEnum.七行双线屏";
            case @((int) ScreenTypeEnum.定制双线屏):
                return "@ScreenTypeEnum.定制双线屏";
            case @((int) ScreenTypeEnum.表格定制屏):
                return "@ScreenTypeEnum.表格定制屏";
            default:
                return "";
            }
        }

        function doPostBackReBindGrid(event) {
            var grid1 = F.ui.Grid1;

            // 触发后台事件
            F.doPostBack('@Url.Action("DoSearch")',
            {
                Grid1_fields: grid1.fields,
                Grid1_pageIndex: grid1.pageIndex,
                Grid1_pageSize: F.ui.ddlPageSize.getValue()
            });

        }

        function onDdlPageSizeChange(event) {
            doPostBackReBindGrid();
        }

        function onMapAllClick() {
            window.open('@Url.Content("~/ScreenStats/DispatchScreenRec/LocateAll")');
        }

        function renderActions(value, params) {
            var deleteImageUrl = '@Url.Content("~/res/icon/delete.png")';
            return '<a class="action-btn delete" href="javascript:;"><img class="f-grid-cell-icon" src="' + deleteImageUrl + '"></a>';
        }

        function onNewClick(event) {
            var grid2 = F.ui.Grid2;
            //var data = grid2.alldata[0].values;
            var rowData = F.ui.rowClicked.getValue();
            if (rowData) {
                var data = $.parseJSON(rowData);
                // 新增一行（返回新增行的ID）
                var addedRowId = grid2.addNewRecord({
                        'DeviceNum': data["DeviceNum"],
                        'Owner': data["Owner"],
                        'LineName': data["LineName"],
                        'ScreenCount': data["ScreenCount"],
                        'InstallStation': data["InstallStation"],
                        'InstallDate':data["InstallDate"],
                        'SaveTime': new Date()
                    },
                    true,
                    'Materials_Remark');
                // 选中新增的那一行
                grid2.selectRow(addedRowId);
            } else {
                F.alert("请选择一行记录");
            }

        }

        function onResetClick(event) {
            F.confirm({
                message: '确定要重置表格数据？',
                ok: function() {
                    F.ui.Grid1.rejectChanges();
                    F.ui.Grid2.rejectChanges();
                }
            });
        }

        function onGridDataChange() {
            var grid1 = F.ui.Grid1;
            var btnSubmit = F.ui.btnSubmit;
            var grid2 = F.ui.Grid2;
            // 如果没有删除行，没有新增行，没有修改的数据
            if (!grid1.getModifiedData().length && !grid2.getModifiedData().length) {
                btnSubmit.disable();
            } else {
                btnSubmit.enable();
            }
        }

        function onGrid1RowClick(event, rowId) {
            var grid1 = F.ui.Grid1;
            var rowData = grid1.getRowData(rowId);
            var column = grid1.getColumn(grid1.getSelectedCell()[1]);
            F.ui.rowClicked.setValue(JSON.stringify(rowData.values));
            // 触发后台事件
            F.doPostBack('@Url.Action("Grid1_RowClick")',
                'Grid2',
                {
                    rowId: rowData.id,
                    rowText: rowData.text,
                    rowIndex: rowData.index,
                    columnText: column.text
                });

        }

        function renderDeleteField(value, params) {
            return '<a href="javascript:;" class="deletefield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/delete.png")"></a>';
        }

        function renderLocateField(value, params) {
            return '<a href="javascript:;" class="locatefield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/map.png")"></a>';
        }

        function onCreateClick(event) {
            F.ui.Window1.show('@Url.Content("~/ScreenStats/DispatchScreenRec/Create")', '新增记录');
        }

        function onImportClick(parameters) {
            F.ui.Window1.show('@Url.Content("~/ScreenStats/DispatchScreenRec/Import")', '导入Excel');
        }

        function deleteSelectedRows(selectedRows) {
            // 触发后台事件
            F.doPostBack('@Url.Action("Delete")',
                'Form1,Grid1',
                {
                    'selectedRows': selectedRows
                });
        }

        function onDeleteSelectedClick(event) {
            var grid1 = F.ui.Grid1;

            if (!grid1.hasSelection()) {
                F.alert('请至少选择一项！');
                return;
            }

            var selectedRows = grid1.getSelectedRows();
            console.log(selectedRows);
            F.confirm({
                message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
                target: '_top',
                ok: function() {
                    deleteSelectedRows(selectedRows);
                }
            });
        }

        F.ready(function() {

            var grid2 = F.ui.Grid2;
            grid2.el.on('click', 'a.action-btn.delete', function (event) {
                var cnode = $(this);
                var rowData = grid2.getRowData(cnode.closest('.f-grid-row'));

                F.confirm({
                    message: '删除选中行？',
                    target: '_top',
                    ok: function () {
                        grid2.deleteRow(rowData);
                    }
                });
            });

            var grid1 = F.ui.Grid1;

            grid1.el.on('click',
                'a.deletefield',
                function(event) {
                    var rowEl = $(this).closest('.f-grid-row');
                    var rowData = grid1.getRowData(rowEl);
                    console.log(rowData);
                    F.confirm({
                        message: '你确定要删除选中的行数据吗？',
                        target: '_top',
                        ok: function() {
                            deleteSelectedRows([rowData.id]);
                        }
                    });
                });

            grid1.el.on('click',
                'a.locatefield',
                function(event) {
                    var rowEl = $(this).closest('.f-grid-row');
                    var rowData = grid1.getRowData(rowEl);

                    window.open('@Url.Content("~/ScreenStats/DispatchScreenRec/Locate/")?line=' +
                        rowData.values.LineName+'&station='+rowData.values.InstallStation);
                });

        });


    </script>
}
