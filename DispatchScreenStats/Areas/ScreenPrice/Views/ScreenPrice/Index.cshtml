@{
    ViewBag.Title = "Index";
    var F = Html.F();
    var isAuthorized = CommonHelper.User == "admin";
}

@using DispatchScreenStats.Common
@using DispatchScreenStats.Enums
@model IEnumerable<DispatchScreenStats.Models.ScreenRec>


@section body {

    @(F.Panel()
          .ID("Panel1")
          .BodyPadding(5)
          .ShowBorder(false)
          .ShowHeader(false)
          .Layout(LayoutType.VBox)
          .IsViewPort(true)
          .Items(
              F.Grid()
                  .BoxFlex(1)
                  .ShowHeader(false)
                  .ShowBorder(true)
                  .ID("Grid1")
                          .DataIDField("_id").DataTextField("DeviceNum")
                  .EnableCheckBoxSelect(true)
                          .AllowPaging(true).AllowCellEditing(true).ClicksToEdit(2)
                  .PageSize(ViewBag.PageSize)
                  .IsDatabasePaging(true)
                  .OnPageIndexChanged(Url.Action("DoSearch"), "Form1,Grid1")
                  .Toolbars(
                      F.Toolbar()
                          .Items(
                                   F.Button().Listener("click", "onBtnClick").Icon(Icon.SystemSearch).Text("搜索"),
                    isAuthorized ? F.Button()
                        .ID("btnDeleteSelected")
                        .Icon(Icon.Delete)
                        .Text("删除选中记录")
                        .Listener("click", "onDeleteSelectedClick") : F.Button().Hidden(true),
                                   F.ToolbarFill(),
                                      //F.Button()
                                      //    .ID("btnNew")
                                      //    .Text("新增日志")
                                      //    .Icon(Icon.Add)
                                      //    .Listener("click", "onNewClick"),
                                      F.Button()
                                          .ID("btnReset")
                                          .Text("重置表格数据")
                                          .Listener("click", "onResetClick"),
                                      F.Button()
                                          .ID("btnSubmit").Enabled(false)
                                          .Text("保存数据").Icon(Icon.SystemSave)
                                          .OnClick(Url.Action("btnSubmit_Click"), "Grid1")
            // isAuthorized ? F.Button()
            //.ID("btnDeleteAll")
            //.Icon(Icon.Delete)
            //.Text("删除全部")
            //.Listener("click", "onDeleteAllClick") : F.Button().Hidden(true)
                          )
                  )
                  .Columns(
                      F.RowNumberField(),
                                F.RenderField()
                                                  .HeaderText("设备编号").Width(80)
                                                          .DataField("DeviceNum"),
                                                          F.RenderField()
                                                  .HeaderText("营运公司").Width(80)
                                  .DataField("Owner"),
                              F.RenderField()
                                  .HeaderText("安装线路")
                                                  .DataField("LineName"),
                              F.RenderField()
                                                  .HeaderText("屏幕类型").FieldType(FieldType.Int)
                                  .DataField("ScreenType").Width(120).RendererFunction("renderScreenType"),
                              F.RenderField()
                                                  .HeaderText("安装站点").SortField("InstallStation")
                                  .DataField("InstallStation").Width(120),
                              F.RenderField()
                                                  .HeaderText("安装日期").SortField("InstallDate")
                                  .DataField("InstallDate").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd"),
                                          F.RenderField()
                                                          .HeaderText("金额").SortField("Price")
                                                          .DataField("Price").Editor(F.TextBox().ID("tbxPr")),
                                                                  F.RenderField()
                                                                  .HeaderText("付款状态").SortField("PaymentStatus")
                                                                                  .DataField("PaymentStatus").Editor(F.DropDownList().Items(ViewBag.PaymentStatuses)),
                                                                  F.RenderField()
                                                          .HeaderText("收费时间").SortField("ChargeTime")
                                                  .DataField("ChargeTime").FieldType(FieldType.Date).RendererArgument("yyyy-MM-dd")
                                          .Editor(
                                              F.DatePicker()
                                                          .ID("dpChargeTime")
                                                  ),
                                              F.RenderField()
                                                  .HeaderText("备注").Editor(F.TextBox().ID("tbxRemark"))
                                                  .DataField("Materials.Remark").Width(180).ExpandUnusedSpace(true),
                      F.RenderField()
                          .HeaderText("")
                          .Width(60)
                          .RendererFunction("renderDeleteField")
                          .TextAlign(TextAlign.Center)
                          .EnableHeaderMenu(false)
                          .EnableColumnHide(false)
                          ).PageItems(
                              F.ToolbarSeparator(),
                              F.ToolbarText()
                                  .Text("每页记录数："),
                              F.DropDownList()
                                  .ID("ddlPageSize")
                                  .Width(80)
                                  .Listener("change", "onDdlPageSizeChange")
                                  .Items(
                                      F.ListItem()
                                          .Text("20")
                                          .Value("20"),
                                      F.ListItem()
                                          .Text("50")
                                          .Value("50"),
                                      F.ListItem()
                                          .Text("100")
                                          .Value("100"),
                                      F.ListItem()
                                          .Text("200")
                                          .Value("200")
                                  )
                          )
                  .RecordCount(ViewBag.RecordCount)
                  .DataSource(Model)
                          .Listener("datachange", "onGridDataChange")
          ))


    @(F.Window()
          .ID("Window1")
          .Width(650)
          .Height(350)
          .IsModal(true)
          .Hidden(true)
          .Target(Target.Top)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableIFrame(true)
          .IFrameUrl(Url.Content("about:blank"))
          .OnClose(Url.Action("DoSearch"), "Form1,Grid1")
    )

}

@section script {

    <script>
        function onBtnClick() {
            F.ui.Window1.show('@Url.Action("Search")', '搜索');
        }
        function doSearch(values) {
            F.doPostBack('@Url.Action("DoSearch")', 'Grid1', values);
        }
        function renderScreenType(val) {
            switch (val) {
                case @((int) ScreenTypeEnum.标准单线屏):
                    return "@ScreenTypeEnum.标准单线屏";
                case @((int) ScreenTypeEnum.七行双线屏):
                    return "@ScreenTypeEnum.七行双线屏";
                case @((int) ScreenTypeEnum.定制双线屏):
                    return "@ScreenTypeEnum.定制双线屏";
                case @((int) ScreenTypeEnum.表格定制屏):
                    return "@ScreenTypeEnum.表格定制屏";
                default:
                    return "";
            }
        }
        function onGridDataChange() {
            var grid1 = F.ui.Grid1;
            var btnSubmit = F.ui.btnSubmit;
            // 如果没有删除行，没有新增行，没有修改的数据
            if (!grid1.getModifiedData().length) {
                btnSubmit.disable();
            } else {
                btnSubmit.enable();
            }
        }
        function onNewClick(event) {
            var grid = F.ui.Grid1;
            // 新增一行（返回新增行的ID）
            var addedRowId = grid.addNewRecord({},
                true,
                'DeviceNum');
            // 选中新增的那一行
            grid.selectRow(addedRowId);
        }

        function onResetClick(event) {
            F.confirm({
                message: '确定要重置表格数据？',
                ok: function () {
                    F.ui.Grid1.rejectChanges();
                }
            });
        }

        function onDdlPageSizeChange(event) {
            var grid1 = F.ui.Grid1;

            // 触发后台事件
            F.doPostBack('@Url.Action("DoSearch")',
            {
                Grid1_fields: grid1.fields,
                Grid1_pageIndex: grid1.pageIndex,
                Grid1_pageSize: F.ui.ddlPageSize.getValue()
            });
        }
        function onDeleteAllClick(event) {
            F.confirm({
                message: '确定删除全部？',
                target: '_top',
                ok: function () {
                    F.doPostBack('@Url.Action("DeleteAll")', 'Form1,Grid1');
                }
            });
        }
        function renderDeleteField(value, params) {
            return '<a href="javascript:;" class="deletefield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/delete.png")"></a>';
        }

        function deleteSelectedRows(selectedRows) {
            // 触发后台事件
            F.doPostBack('@Url.Action("Delete")',
            'Form1,Grid1',
            {
                'selectedRows': selectedRows
            });
        }

        function onDeleteSelectedClick(event) {
            var grid1 = F.ui.Grid1;

            if (!grid1.hasSelection()) {
                F.alert('请至少选择一项！');
                return;
            }

            var selectedRows = grid1.getSelectedRows();
            console.log(selectedRows);
            F.confirm({
                message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
                target: '_top',
                ok: function () {
                    deleteSelectedRows(selectedRows);
                }
            });
        }

        F.ready(function () {

            var grid1 = F.ui.Grid1;

            grid1.el.on('click',
                'a.deletefield',
                function (event) {
                    var rowEl = $(this).closest('.f-grid-row');
                    var rowData = grid1.getRowData(rowEl);
                    console.log(rowData);
                    F.confirm({
                        message: '你确定要删除选中的行数据吗？',
                        target: '_top',
                        ok: function () {
                            deleteSelectedRows([rowData.id]);
                        }
                    });
                });

        });


    </script>
}
